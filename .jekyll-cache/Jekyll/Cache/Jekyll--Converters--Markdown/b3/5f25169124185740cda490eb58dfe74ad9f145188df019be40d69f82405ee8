I"IH<h1 id="1-객체지향언어">1. 객체지향언어</h1>
<h2 id="11-객체지향언어의-역사">1.1 객체지향언어의 역사</h2>

<p>80년 초 소프트웨어의 위기(c언어, fortran, cobol 등) - 빠른 변화를 못쫓아감</p>

<p>해결책으로 객체지향 언어를 도입(절차적 → 객체지향)</p>

<p>참고) c언어 + 객체지향 개념 ⇒ c++ ⇒ java</p>

<p><br /></p>

<h2 id="12-객체지향언어">1.2 객체지향언어</h2>

<p>코드의 재사용성이 높고 유지보수가 용이, 중복 코드 제거</p>

<p><code class="language-plaintext highlighter-rouge">객체지향 언어 = 프로그래밍 언어 + 객체지향개념(규칙)</code></p>

<p>OOP (Object-Oriented Programming, 객체 지향 프로그래밍)</p>

<h3 id="객체지향언어의-핵심-개념-캡상추다">객체지향언어의 핵심 개념 (캡상추다)</h3>

<ol>
  <li>캡슐화</li>
  <li>상속</li>
  <li>추상화</li>
  <li>다형성 *** (가장 중요)</li>
</ol>

<p>이론서</p>
<ul>
  <li>디자인 패턴: 객체지향개념을 이용해서 프로그래밍을 자주할 때 사용하는 패턴을 모아놓은 것</li>
  <li>객체지향개념</li>
</ul>

<p>객체지향언어란 결국 설계를 잘하는 것! 설계가 잘 안된다고 해서 이론서로 바로 빠지면 안된다!
jsp, spring 을 공부한 후 이론서 공부를 하던가 해야지 바로 이론서로 가지 말 것!</p>

<h1 id="2-클래스와-객체">2. 클래스와 객체</h1>

<h2 id="21-클래스와-객체의-정의와-용도">2.1 클래스와 객체의 정의와 용도</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>클래스의 정의: 클래스란 객체를 정의해 놓은 것, 객체의 설계도 또는 틀
클래스의 용도: 클래스는 객체를 생성하는데 사용
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>객체의 정의: 실제로 존재하는 것. 사물 또는 개념
객체의 용도: 객체가 가지고 있는 기능과 속성에 따라 다름
</code></pre></div></div>

<p>클래스는 단지 객체를 생성하는데 사용될 뿐, 객체 그 자체는 아니다. 우리가 원하는 기능의 객체를 사용하기 위해서는 먼저 클래스로부터 객체를 생성하는 과정이 선행되어야 한다.</p>

<p>예를들어, 우리가 TV를 보기 위해서는 TV(객체)가 필요한 것이지 TV설계도(클래스)가 필요한 것이 아니며, TV설계도(클래스)는 단지 TV라는 제품(객체)을 만드는 데만 사용될 뿐이다.</p>

<p>TV설계도를 통해 TV가 만들어진 것 처럼 클래스를 작성한 다음, 클래스로부터 객체를 생성하여 사용한다.</p>

<blockquote>
  <p>객체를 사용한다는 것은 객체가 가지고 있는 속성(변수)과 기능(메서드)을 사용한다는 뜻</p>

</blockquote>

<h2 id="22-객체와-인스턴스">2.2 객체와 인스턴스</h2>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>객체: 모든 인스턴스를 대표하는 일반적 용어
인스턴스: 특정 클래스로부터 생성된 객체(예: TV 클래스로부터 생성된 객체는 Tv 인스턴스)
인스턴스화: 클래스로부터 객체를 만드는 과정
</code></pre></div></div>

<p><img src="https://user-images.githubusercontent.com/79130276/146671855-aaba4ab1-f9c4-4a80-ae7d-a05e51452689.png" alt="1" /></p>

<p>클래스(설계도)</p>

<p><img src="https://user-images.githubusercontent.com/79130276/146671854-66049428-237a-4da5-910e-4ea895d64105.png" alt="2" /></p>

<p>인스턴스,객체(제품)</p>

<p><img src="https://user-images.githubusercontent.com/79130276/146671853-6f357af7-34be-494a-a1cf-453b2980af9f.png" alt="3" /></p>

<h2 id="23-객체의-구성요소---속성과-기능">2.3 객체의 구성요소 - 속성과 기능</h2>

<p>객체(사물) = 속성(변수) + 기능(메서드)</p>

<p>TV 일때</p>

<ul>
  <li>속성: 크기, 길이, 높이, 색상, 볼륨, 채널등</li>
  <li>기능: 켜기, 끄기, 볼륨 높이기, 볼륨 낮추기, 채널 변경하기 등</li>
</ul>

<p>Tv 클래스 = Tv 설계도</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Tv</span><span class="o">{</span>
	<span class="c1">// 변수 시작</span>
	<span class="nc">Stirng</span> <span class="n">color</span><span class="o">;</span>
	<span class="kt">boolean</span> <span class="n">power</span><span class="o">;</span>
	<span class="kt">int</span> <span class="n">channel</span><span class="o">;</span>
	<span class="c1">// 변수 끝</span>

	<span class="c1">// 메서드 시작</span>
	<span class="kt">void</span> <span class="nf">power</span><span class="o">()</span> <span class="o">{</span> <span class="n">power</span> <span class="o">=</span> <span class="o">!</span><span class="n">power</span><span class="o">;</span> <span class="o">}</span>
	<span class="kt">void</span> <span class="nf">channelUp</span><span class="o">()</span> <span class="o">{</span> <span class="n">channel</span><span class="o">++;</span> <span class="o">}</span>
	<span class="kt">void</span> <span class="nf">channelDown</span><span class="o">()</span> <span class="o">{</span> <span class="n">channel</span><span class="o">--;</span> <span class="o">}</span>
	<span class="c1">// 메서드 끝</span>
<span class="o">}</span>
</code></pre></div></div>
<p>변수 3개 + 메서드 3개 ⇒ 멤버 변수 6개</p>

<h2 id="24-객체의-생성과-사용">2.4 객체의 생성과 사용</h2>

<h3 id="1-객체의-생성">1. 객체의 생성</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">클래스명</span> <span class="n">변수명</span><span class="o">;</span>           <span class="c1">// 클래스의 객체를 참조하기 위한 참조변수를 선언</span>
<span class="n">변수명</span> <span class="o">=</span> <span class="k">new</span> <span class="n">클래스명</span><span class="o">();</span>   <span class="c1">// 클래스의 객체를 생성 후, 객체의 주소를 참조변수에 저장</span>

<span class="nc">Tv</span> <span class="n">t</span><span class="o">;</span>                  <span class="c1">// Tv 클래스 타입의 참조변수 t를 선언</span>
<span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Tv</span><span class="o">();</span>          <span class="c1">// Tv 인스턴스를 생성한 후, 생성된 Tv 인스턴스의 주소를 t에 저장</span>

<span class="c1">// 위의 두줄을 아래 처럼 사용 가능</span>
<span class="nc">Tv</span> <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Tv</span><span class="o">();</span> <span class="c1">// Tv 객체를 생성</span>
</code></pre></div></div>

<ol>
  <li>
    <p>Tv t;</p>

    <p>→ 변수선언</p>

    <p>t 는 참조변수 → 리모콘이라고도 한다.</p>

    <p>Tv 는 기본형이 아님. 따라서, 참조형.</p>
  </li>
  <li>
    <p>t = new Tv();</p>

    <p>→ Tv 객체 생성</p>

    <p>new 연산자는 객체를 만들고 객체의 주소를 반환한다(0x100)</p>

    <p><img src="https://user-images.githubusercontent.com/79130276/146671853-6f357af7-34be-494a-a1cf-453b2980af9f.png" alt="3" /></p>
  </li>
</ol>

<p><code class="language-plaintext highlighter-rouge">객체를 사용하려면 반드시 참조변수(리모콘)가 필요</code>하다.</p>

<p>생성된 객체와 참조변수를 연결해줘야한다(‘=’(대입연산자) 사용)</p>

<p>참조변수 t를 통해 TV인스턴스에 접근 할 수 있다.</p>

<p>인스턴스를 다루기 위해서는 참조변수가 반드시 필요하다.</p>

<h3 id="2-객체의-사용사용이란-변수-메서드-사용">2. 객체의 사용(사용이란 변수, 메서드 사용)</h3>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">t</span><span class="o">.</span><span class="na">channel</span> <span class="o">=</span> <span class="mi">7</span><span class="o">;</span>     <span class="c1">// Tv 인스턴스의 멤버변수 channel 의 값을 7로 한다. =&gt; 변수사용</span>
<span class="n">t</span><span class="o">.</span><span class="na">channelDown</span><span class="o">();</span>   <span class="c1">// Tv 인스턴스의 메서드 channelDown()을 호출한다.  =&gt; 메서드사용(메서드호출)</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"현재 채널은 "</span> <span class="o">+</span> <span class="n">t</span><span class="o">.</span><span class="na">channel</span> <span class="o">+</span> <span class="s">" 입니다."</span><span class="o">);</span>
</code></pre></div></div>

<p>과정</p>
<ol>
  <li>클래스 작성(설계도 작성)</li>
  <li>객체 생성(제품 생성)</li>
  <li>객체 사용(제품 사용)</li>
</ol>

<p><code class="language-plaintext highlighter-rouge">인스턴스는 참조변수를 통해서만 다룰 수 있으며, 참조변수의 타입은 인스턴스의 타입과 일치해야한다.</code></p>

<p>TvTest.java</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Tv</span> <span class="o">{</span> 
     <span class="c1">// Tv의 속성(멤버변수) </span>
     <span class="nc">String</span> <span class="n">color</span><span class="o">;</span>           	<span class="c1">// 색상 </span>
     <span class="kt">boolean</span> <span class="n">power</span><span class="o">;</span>         	<span class="c1">// 전원상태(on/off) </span>
     <span class="kt">int</span> <span class="n">channel</span><span class="o">;</span>           	<span class="c1">// 채널 </span>

     <span class="c1">// Tv의 기능(메서드) </span>
     <span class="kt">void</span> <span class="nf">power</span><span class="o">()</span>   <span class="o">{</span> <span class="n">power</span> <span class="o">=</span> <span class="o">!</span><span class="n">power</span><span class="o">;</span> <span class="o">}</span>  <span class="c1">// TV를 켜거나 끄는 기능을 하는 메서드  </span>
     <span class="kt">void</span> <span class="nf">channelUp</span><span class="o">()</span>   <span class="o">{</span>  <span class="o">++</span><span class="n">channel</span><span class="o">;</span> <span class="o">}</span>  <span class="c1">// TV의 채널을 높이는 기능을 하는 메서드 </span>
     <span class="kt">void</span> <span class="nf">channelDown</span><span class="o">()</span> <span class="o">{</span> <span class="o">--</span><span class="n">channel</span><span class="o">;</span> <span class="o">}</span>   <span class="c1">// TV의 채널을 낮추는 기능을 하는 메서드  </span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">TvTest</span> <span class="o">{</span> 
      <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span> <span class="n">args</span><span class="o">[])</span> <span class="o">{</span> 
            <span class="nc">Tv</span> <span class="n">t</span><span class="o">;</span>                  <span class="c1">// Tv인스턴스를 참조하기 위한 변수 t를 선언       </span>
            <span class="n">t</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Tv</span><span class="o">();</span>          <span class="c1">// Tv인스턴스를 생성한다. </span>
            <span class="n">t</span><span class="o">.</span><span class="na">channel</span> <span class="o">=</span> <span class="mi">7</span><span class="o">;</span>         <span class="c1">// Tv인스턴스의 멤버변수 channel의 값을 7로 한다. </span>
            <span class="n">t</span><span class="o">.</span><span class="na">channelDown</span><span class="o">();</span>       <span class="c1">// Tv인스턴스의 메서드 channelDown()을 호출한다. </span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"현재 채널은 "</span> <span class="o">+</span> <span class="n">t</span><span class="o">.</span><span class="na">channel</span> <span class="o">+</span> <span class="s">" 입니다."</span><span class="o">);</span> 
      <span class="o">}</span> 
<span class="o">}</span>
</code></pre></div></div>

<p><br /></p>

<p>TvTest3.java</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">class</span> <span class="nc">Tv</span> <span class="o">{</span> 
     <span class="c1">// Tv의 속성(멤버변수) </span>
     <span class="nc">String</span> <span class="n">color</span><span class="o">;</span>           <span class="c1">// 색상 </span>
     <span class="kt">boolean</span> <span class="n">power</span><span class="o">;</span>          <span class="c1">// 전원상태(on/off) </span>
     <span class="kt">int</span> <span class="n">channel</span><span class="o">;</span>          	 <span class="c1">// 채널 </span>

     <span class="c1">// Tv의 기능(메서드) </span>
     <span class="kt">void</span> <span class="nf">power</span><span class="o">()</span>   <span class="o">{</span> <span class="n">power</span> <span class="o">=</span> <span class="o">!</span><span class="n">power</span><span class="o">;</span> <span class="o">}</span>  <span class="c1">// TV를 켜거나 끄는 기능을 하는 메서드 </span>
     <span class="kt">void</span> <span class="nf">channelUp</span><span class="o">()</span>   <span class="o">{</span>  <span class="o">++</span><span class="n">channel</span><span class="o">;</span> <span class="o">}</span>  <span class="c1">// TV의 채널을 높이는 기능을 하는 메서드 </span>
     <span class="kt">void</span> <span class="nf">channelDown</span><span class="o">()</span> <span class="o">{</span>  <span class="o">--</span><span class="n">channel</span><span class="o">;</span> <span class="o">}</span>  <span class="c1">// TV의 채널을 낮추는 기능을 하는 메서드  </span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">TvTest3</span> <span class="o">{</span>
	<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span> <span class="n">args</span><span class="o">[])</span> <span class="o">{</span>
		<span class="nc">Tv</span> <span class="n">t1</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Tv</span><span class="o">();</span>
		<span class="nc">Tv</span> <span class="n">t2</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Tv</span><span class="o">();</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"t1의 channel값은 "</span> <span class="o">+</span> <span class="n">t1</span><span class="o">.</span><span class="na">channel</span> <span class="o">+</span> <span class="s">"입니다."</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"t2의 channel값은 "</span> <span class="o">+</span> <span class="n">t2</span><span class="o">.</span><span class="na">channel</span> <span class="o">+</span> <span class="s">"입니다."</span><span class="o">);</span>

		<span class="n">t2</span> <span class="o">=</span> <span class="n">t1</span><span class="o">;</span>		<span class="c1">// t1이 저장하고 있는 값(주소)을 t2에 저장한다.</span>
		<span class="n">t1</span><span class="o">.</span><span class="na">channel</span> <span class="o">=</span> <span class="mi">7</span><span class="o">;</span>	<span class="c1">// channel 값을 7로 한다.</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"t1의 channel값을 7로 변경하였습니다."</span><span class="o">);</span>

		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"t1의 channel값은 "</span> <span class="o">+</span> <span class="n">t1</span><span class="o">.</span><span class="na">channel</span> <span class="o">+</span> <span class="s">"입니다."</span><span class="o">);</span>
		<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"t2의 channel값은 "</span> <span class="o">+</span> <span class="n">t2</span><span class="o">.</span><span class="na">channel</span> <span class="o">+</span> <span class="s">"입니다."</span><span class="o">);</span>
	<span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<ol>
  <li>
    <p>Tv t1 = new Tv();</p>

    <p>Tv t2 = new Tv();</p>

    <p>→ 객체마다 별도의 저장공간이 생긴다 (주소가 다름)</p>
  </li>
  <li>
    <p>t2 = t1;</p>

    <p>→ t1 이 저장하고 있는 객체의 주소를 t2 에 저장</p>
  </li>
</ol>

<p><img src="https://user-images.githubusercontent.com/79130276/146672071-0e0bd570-5159-466e-9ea9-b2002a4e42ab.png" alt="4" /></p>

<p>위의 예제에서 알 수 있듯이, 참조변수에는 하나의 값(주소)만이 저장될 수 있으므로 둘 이상의 참조변수가 하나의 인스턴스를 가리키는(참조하는) 것은 가능하지만 하나의 참조변수로 여러개의 인스턴스를 가리키는 것은 불가능하다.
<img src="https://user-images.githubusercontent.com/79130276/146672372-84f5d309-33ef-45d0-b583-87722bf93f19.png" alt="5" /></p>
:ET