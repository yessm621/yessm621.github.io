I"<h2 id="auth_user_model-설정">AUTH_USER_MODEL 설정</h2>

<hr />

<p>장고에는 기본적으로 내장되어있는 AbstractUser 이 있다.</p>

<p>내장된 AbstractUser 를 사용할 수도 있지만 보통은 새롭게 정의해서 사용하기 때문에</p>

<p>아래 설정을 settings.py 파일에서 해준다.</p>

<p>→ 아래 설정을 생략하면 장고의 기본적으로 세팅되어있는 user 모델과 혼동이 올 수 있음</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">AUTH_USER_MODEL</span> <span class="o">=</span> <span class="s">'users.User'</span>
</code></pre></div></div>

<p><br />
<br /></p>

<h2 id="login_url-login_redirect_url-설정">LOGIN_URL, LOGIN_REDIRECT_URL 설정</h2>

<hr />

<p>Django 의  Login, Logout 메커니즘은</p>

<ol>
  <li>
    <p>next 라는 변수를 먼저 찾음. 없다면,</p>
  </li>
  <li>
    <p>login_redirect_url 을 찾는다. 없다면,</p>
  </li>
  <li>
    <p>default 로 간다.</p>
  </li>
</ol>

<p>settings.py</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">LOGIN_URL</span> <span class="o">=</span> <span class="n">reverse_lazy</span><span class="p">(</span><span class="s">'account:login'</span><span class="p">)</span>
<span class="n">LOGIN_REDIRECT_URL</span> <span class="o">=</span> <span class="n">reverse_lazy</span><span class="p">(</span><span class="s">'main:index'</span><span class="p">)</span>
</code></pre></div></div>

<p>next 를 사용했는데 login_redirect_url 를 설정할 필요가 있을까?</p>

<p>→ yes!! 주소창에서 직접 들어가게 되면 next 변수가 없어서 default 로 가게 됨. 따라서 오류 발생</p>

<p><br /><br /></p>
:ET